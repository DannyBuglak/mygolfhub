services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_USER=user
      - DATABASE_PASSWORD=password
      - DATABASE_DB=mygolfhub
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      #- ./frontend:/app
      #- /app/node_modules
      - ./frontend:/src
      - /src/node_modules
    environment:
      - WDS_SOCKET_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - app-network
    stdin_open: true
    tty: true

  db:
    image: mysql:5.7
    container_name: mygolfhub_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mygolfhub
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/app/database/create_tables:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
